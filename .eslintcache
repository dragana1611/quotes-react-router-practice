[{"D:\\Gaga\\React-Udemy_Max\\react-router-practice\\src\\index.js":"1","D:\\Gaga\\React-Udemy_Max\\react-router-practice\\src\\App.js":"2","D:\\Gaga\\React-Udemy_Max\\react-router-practice\\src\\pages\\AllQuotes.js":"3","D:\\Gaga\\React-Udemy_Max\\react-router-practice\\src\\pages\\NewQuote.js":"4","D:\\Gaga\\React-Udemy_Max\\react-router-practice\\src\\pages\\QuoteDetail.js":"5","D:\\Gaga\\React-Udemy_Max\\react-router-practice\\src\\components\\comments\\Comments.js":"6","D:\\Gaga\\React-Udemy_Max\\react-router-practice\\src\\components\\comments\\NewCommentForm.js":"7","D:\\Gaga\\React-Udemy_Max\\react-router-practice\\src\\components\\layout\\Layout.js":"8","D:\\Gaga\\React-Udemy_Max\\react-router-practice\\src\\components\\layout\\MainNavigation.js":"9","D:\\Gaga\\React-Udemy_Max\\react-router-practice\\src\\components\\quotes\\QuoteList.js":"10","D:\\Gaga\\React-Udemy_Max\\react-router-practice\\src\\components\\quotes\\QuoteItem.js":"11","D:\\Gaga\\React-Udemy_Max\\react-router-practice\\src\\components\\quotes\\QuoteForm.js":"12","D:\\Gaga\\React-Udemy_Max\\react-router-practice\\src\\components\\UI\\Card.js":"13","D:\\Gaga\\React-Udemy_Max\\react-router-practice\\src\\components\\UI\\LoadingSpinner.js":"14","D:\\Gaga\\React-Udemy_Max\\react-router-practice\\src\\components\\quotes\\HighlightedQuote.js":"15","D:\\Gaga\\React-Udemy_Max\\react-router-practice\\src\\pages\\NotFound.js":"16","D:\\Gaga\\React-Udemy_Max\\react-router-practice\\src\\hooks\\use-http.js":"17","D:\\Gaga\\React-Udemy_Max\\react-router-practice\\src\\lib\\api.js":"18","D:\\Gaga\\React-Udemy_Max\\react-router-practice\\src\\components\\quotes\\NoQuotesFound.js":"19","D:\\Gaga\\React-Udemy_Max\\react-router-practice\\src\\components\\comments\\CommentsList.js":"20","D:\\Gaga\\React-Udemy_Max\\react-router-practice\\src\\components\\comments\\CommentItem.js":"21"},{"size":261,"mtime":1683487975533,"results":"22","hashOfConfig":"23"},{"size":780,"mtime":1683399929803,"results":"24","hashOfConfig":"23"},{"size":1148,"mtime":1683568923981,"results":"25","hashOfConfig":"23"},{"size":785,"mtime":1683567973678,"results":"26","hashOfConfig":"23"},{"size":1958,"mtime":1683570678131,"results":"27","hashOfConfig":"23"},{"size":1901,"mtime":1683574742657,"results":"28","hashOfConfig":"23"},{"size":1466,"mtime":1683573745515,"results":"29","hashOfConfig":"23"},{"size":304,"mtime":1683396766349,"results":"30","hashOfConfig":"23"},{"size":612,"mtime":1683397362567,"results":"31","hashOfConfig":"23"},{"size":1688,"mtime":1683562179015,"results":"32","hashOfConfig":"23"},{"size":455,"mtime":1683398645120,"results":"33","hashOfConfig":"23"},{"size":1932,"mtime":1683401823362,"results":"34","hashOfConfig":"23"},{"size":156,"mtime":1616596573000,"results":"35","hashOfConfig":"23"},{"size":167,"mtime":1616596573000,"results":"36","hashOfConfig":"23"},{"size":270,"mtime":1616596573000,"results":"37","hashOfConfig":"23"},{"size":186,"mtime":1683399736714,"results":"38","hashOfConfig":"23"},{"size":1212,"mtime":1683566768642,"results":"39","hashOfConfig":"23"},{"size":2216,"mtime":1683567276789,"results":"40","hashOfConfig":"23"},{"size":331,"mtime":1683569135757,"results":"41","hashOfConfig":"23"},{"size":334,"mtime":1616596573000,"results":"42","hashOfConfig":"23"},{"size":200,"mtime":1616596573000,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1oni9s3",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Gaga\\React-Udemy_Max\\react-router-practice\\src\\index.js",[],["90","91"],"D:\\Gaga\\React-Udemy_Max\\react-router-practice\\src\\App.js",[],"D:\\Gaga\\React-Udemy_Max\\react-router-practice\\src\\pages\\AllQuotes.js",["92"],"import React, { useEffect } from \"react\";\r\nimport QuoteList from \"../components/quotes/QuoteList\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getAllQuotes } from \"../lib/api\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\r\n\r\nconst DUMMY_QUOTES = [\r\n  { id: \"q1\", author: \"Max\", text: \"Learning React is fun!\" },\r\n  { id: \"q2\", author: \"Gaga\", text: \"Learning React is great!\" },\r\n];\r\n\r\nconst AllQuotes = () => {\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuotes,\r\n    error,\r\n  } = useHttp(getAllQuotes, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, [sendRequest]);\r\n\r\n  if (status === \"pending\") {\r\n    return (\r\n      <div className=\"centered\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <p className=\"centerd focused\">{error}</p>;\r\n  }\r\n\r\n  if (status === \"completed\" && (!loadedQuotes || loadedQuotes.length === 0)) {\r\n    return <NoQuotesFound />;\r\n  }\r\n  // return <QuoteList quotes={DUMMY_QUOTES} />;\r\n  return <QuoteList quotes={loadedQuotes} />;\r\n};\r\n\r\nexport default AllQuotes;\r\n","D:\\Gaga\\React-Udemy_Max\\react-router-practice\\src\\pages\\NewQuote.js",[],"D:\\Gaga\\React-Udemy_Max\\react-router-practice\\src\\pages\\QuoteDetail.js",[],"D:\\Gaga\\React-Udemy_Max\\react-router-practice\\src\\components\\comments\\Comments.js",["93"],"import { useState, useEffect, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport CommentsList from \"./CommentsList\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n\n  const { quoteId } = params;\n\n  const {\n    sendRequest,\n    status,\n    error,\n    data: loadedComments,\n  } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]); //avoids unnecessary rerender cycles and infinite loops\n\n  let comments;\n\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === \"completed\" && loadedComments && loadedComments.length > 0) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n\n  if (\n    status === \"completed\" &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = <p className=\"centered\">No comments were added yet!</p>;\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={quoteId}\n          onAddedComment={addedCommentHandler}\n        />\n      )}\n      {/* <p>Comments...</p> */}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","D:\\Gaga\\React-Udemy_Max\\react-router-practice\\src\\components\\comments\\NewCommentForm.js",[],"D:\\Gaga\\React-Udemy_Max\\react-router-practice\\src\\components\\layout\\Layout.js",[],"D:\\Gaga\\React-Udemy_Max\\react-router-practice\\src\\components\\layout\\MainNavigation.js",[],"D:\\Gaga\\React-Udemy_Max\\react-router-practice\\src\\components\\quotes\\QuoteList.js",["94"],"import { useHistory, useLocation, useRouteMatch } from \"react-router-dom\";\n\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search); // new URLSearchParams() -> built-in JS constractor f-on -> gives us location object\n\n  const isSortingAscending = queryParams.get(\"sort\") === \"asc\";\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  const changeSortingHandler = () => {\n    // history.push(\"/quotes?sort=\" + (isSortingAscending ? \"desc\" : \"asc\"));\n    // history.push({\n    // pathname: location.pathname,\n    // search: `?sort=${isSortingAscending ? \"desc\" : \"asc\"}`\n    // })\n\n    history.push(\n      `${location.pathname}?sort=${isSortingAscending ? \"desc\" : \"asc\"}`\n    );\n  }; // ?sort=   -> query paramether\n  return (\n    <>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sort {isSortingAscending ? \"Descending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          // {props.quotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default QuoteList;\n","D:\\Gaga\\React-Udemy_Max\\react-router-practice\\src\\components\\quotes\\QuoteItem.js",[],"D:\\Gaga\\React-Udemy_Max\\react-router-practice\\src\\components\\quotes\\QuoteForm.js",[],"D:\\Gaga\\React-Udemy_Max\\react-router-practice\\src\\components\\UI\\Card.js",[],"D:\\Gaga\\React-Udemy_Max\\react-router-practice\\src\\components\\UI\\LoadingSpinner.js",[],"D:\\Gaga\\React-Udemy_Max\\react-router-practice\\src\\components\\quotes\\HighlightedQuote.js",[],"D:\\Gaga\\React-Udemy_Max\\react-router-practice\\src\\pages\\NotFound.js",[],"D:\\Gaga\\React-Udemy_Max\\react-router-practice\\src\\hooks\\use-http.js",[],"D:\\Gaga\\React-Udemy_Max\\react-router-practice\\src\\lib\\api.js",[],"D:\\Gaga\\React-Udemy_Max\\react-router-practice\\src\\components\\quotes\\NoQuotesFound.js",[],"D:\\Gaga\\React-Udemy_Max\\react-router-practice\\src\\components\\comments\\CommentsList.js",[],"D:\\Gaga\\React-Udemy_Max\\react-router-practice\\src\\components\\comments\\CommentItem.js",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":8,"column":7,"nodeType":"101","messageId":"102","endLine":8,"endColumn":19},{"ruleId":"99","severity":1,"message":"103","line":20,"column":5,"nodeType":"101","messageId":"102","endLine":20,"endColumn":10},{"ruleId":"99","severity":1,"message":"104","line":1,"column":35,"nodeType":"101","messageId":"102","endLine":1,"endColumn":48},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-unused-vars","'DUMMY_QUOTES' is assigned a value but never used.","Identifier","unusedVar","'error' is assigned a value but never used.","'useRouteMatch' is defined but never used.","no-global-assign","no-unsafe-negation"]